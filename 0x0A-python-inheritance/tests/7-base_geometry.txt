Importing function from module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> bg = BaseGeometry()

Testing for string and type int:
    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("width", 89)

Testing for string and non-int:
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", (2,))
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", [10])
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", None)
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", {2,3})
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Testing for no parameters:
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Testing for value < 1
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0



Testing for area:
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented